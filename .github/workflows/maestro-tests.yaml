name: E2E CI

on:
  push:
    branches:
      - chore/e2e-ci

jobs:
  e2e-ci:
    runs-on: macos-latest

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Authenticate with Expo
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      - name: Build Android app locally with EAS
        env:
          SENTRY_DISABLE_AUTO_UPLOAD: true
        run: eas build --platform android --profile test --local

      - name: Find APK
        id: find_apk
        run: |
          APK_PATH=$(find . -type f -name "*.apk" | head -n 1)
          echo "::set-output name=apk_path::$APK_PATH"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 30
          emulator: true
          channel: stable

      - name: Update SDK repositories
        run: sdkmanager --update

      - name: Install Android system image
        run: sdkmanager "system-images;android-30;google_apis;arm64-v8a"

      - name: Create Android Emulator
        run: echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;arm64-v8a"

      - name: Start Android Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window -gpu swiftshader_indirect &
          EMULATOR_PID=$!
          sleep 60
          adb devices
          adb wait-for-device
          adb shell input keyevent 82

      - name: Install APK on Emulator
        run: adb install ${{ steps.find_apk.outputs.apk_path }}

      - name: Install Maestro CLI
        run: curl -Ls "https://get.maestro.mobile.dev" | bash

      - name: Run Maestro tests
        run: maestro test e2e
