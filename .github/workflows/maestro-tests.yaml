name: E2E CI

on:
  push:
    branches:
      - chore/e2e-ci

jobs:
  e2e-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Check for EXPO_TOKEN
        run: |
          if [ -z "${{ secrets.EXPO_TOKEN }}" ]; then
            echo "You must provide an EXPO_TOKEN secret linked to this project's Expo account in this repo's secrets. Learn more: https://docs.expo.dev/eas-update/github-actions"
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.14.0'
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Ensure npm is at v10.x
        run: npm install -g npm@10

      - name: Clean install dependencies
        run: |
          rm -rf node_modules
          npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Authenticate with Expo
        run: echo "EXPO_TOKEN=${{ secrets.EXPO_TOKEN }}" >> $GITHUB_ENV

      - name: Set Gradle properties
        run: |
          echo "org.gradle.jvmargs=-Xmx4096m" >> gradle.properties

      - name: Build Android app locally with EAS
        env:
          SENTRY_DISABLE_AUTO_UPLOAD: true
        run: eas build --platform android --profile test --local

      - name: Find APK
        id: find_apk
        run: |
          APK_PATH=$(find . -type f -name "*.apk" | head -n 1)
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install Maestro
        run: curl -Ls 'https://get.maestro.mobile.dev' | bash

      - name: Set up Android Emulator
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 30
          ndk: 25.1.8937393
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          cores: 2
          ram-size: 2048M
          force-avd-creation: false
          emulator-boot-timeout: 900
          disable-animations: true
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          pre-emulator-launch-script: |
            echo "Running pre emulator launch script. Printing the working directory now:"
            pwd
          script: |
            echo "Waiting for the emulator to boot up..."
            adb wait-for-device
            until adb shell getprop sys.boot_completed | grep -m 1 '1'; do echo "Waiting for device to boot..."; sleep 10; done

            echo "Device booted. Listing connected devices:"
            adb devices
            adb shell input keyevent 82

            echo "Disabling animations..."
            adb shell settings put global window_animation_scale 0.0
            adb shell settings put global transition_animation_scale 0.0
            adb shell settings put global animator_duration_scale 0.0

            echo "Installing the APK..."
            adb install ${{ env.APK_PATH }} || (adb kill-server && adb start-server && adb devices && adb install ${{ env.APK_PATH }})

            echo "Running Maestro tests..."
            set -x
            TMP_FILE=_fail_proccess
            $ANDROID_HOME/platform-tools/adb shell screenrecord /sdcard/video_record.mp4 & echo $! > video_record.pid
            sleep 3
            APP_ID=com.comapeo.tests
            (echo "===== Run E2E Attempt:  1 ====" &&             $HOME/.maestro/bin/maestro test e2e --env=APP_ID="$APP_ID" --format=junit --output report1.xml) || \
            (echo "===== Run E2E Attempt:  2 ====" && sleep 20 && $HOME/.maestro/bin/maestro test e2e --env=APP_ID="$APP_ID" --format=junit --output report2.xml) || \
            (echo "===== Run E2E Attempt:  3 ====" && sleep 60 && $HOME/.maestro/bin/maestro test e2e --env=APP_ID="$APP_ID" --format=junit --output report3.xml) || \
            (echo "===== Run E2E Step Failed ====" && touch "$TMP_FILE")
            kill -SIGINT "$(cat video_record.pid)"
            sleep 3
            rm -rf video_record.pid
            $ANDROID_HOME/platform-tools/adb shell screencap -p /sdcard/last_img.png
            $ANDROID_HOME/platform-tools/adb pull /sdcard/last_img.png
            $ANDROID_HOME/platform-tools/adb pull /sdcard/video_record.mp4
            $ANDROID_HOME/platform-tools/adb shell rm /sdcard/video_record.mp4
            echo "::group::Maestro hierarchy"
            $HOME/.maestro/bin/maestro hierarchy
            echo "::endgroup::"
            if [ -f "$TMP_FILE" ]; then
              rm -rf "$TMP_FILE"
              echo "3 tries have failed..."
              exit 1
            else
              echo "Success..."
            fi

      - name: List Maestro Test Results Directory
        run: ls -la $HOME/.maestro/tests/

      - name: Upload Maestro test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: maestro-test-results
          path: /home/runner/.maestro/tests/*/

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: E2E Report (${{ matrix.arch }}, ${{ matrix.api-level }}, ${{ matrix.target }})
          path: |
            ${{ github.workspace }}/*.mp4
            ${{ github.workspace }}/*.png
            ${{ github.workspace }}/report*.xml
            ~/.maestro/tests/**/*
